generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "mongodb"
  url      = env("DATABASE_URL")
}

model User {
  id           String   @id @default(auto()) @map("_id") @db.ObjectId
  name         String
  email        String   @unique
  passwordHash String
  role         Role
  createdAt    DateTime @default(now())
  
  submittedEntries Entry[] @relation("SubmittedBy")
  approvedEntries  Entry[] @relation("ApprovedBy")
}

model Entry {
  id              String   @id @default(auto()) @map("_id") @db.ObjectId
  date            DateTime
  line            String
  shift           String
  hour            String   // Add this field
  teamLeader      String
  shiftInCharge   String
  model           String
  operatorNames   String[]
  availableTime   String
  lineCapacity    String
  problemHead     String
  description     String
  lossTime        Int
  responsibility  String

    // Updated target fields
  ppcTarget       Int?
  ppcTargetLH     Int?
  ppcTargetRH     Int?


  // Updated production fields
  goodParts       Int?
  goodPartsLH     Int?
  goodPartsRH     Int?
  
  // NEW: SPD fields
  spdParts        Int?
  spdPartsLH      Int?
  spdPartsRH      Int?
  
  // Updated rejection fields
  rejects         Int?
  rejectsLH       Int?
  rejectsRH       Int?

  
  productionType  ProductionType?
  defectType      DefectType?
  newDefectDescription String?
  
  // Rejection details
  rejectionPhenomena       String?
  rejectionCause           String?
  rejectionCorrectiveAction String?
  rejectionCount           Int?
  rejectionReason          String?
  
  status          Status
  submittedById   String   @db.ObjectId
  approvedById    String?  @db.ObjectId
  createdAt       DateTime @default(now())
  updatedAt       DateTime @updatedAt
  
  submittedBy User  @relation("SubmittedBy", fields: [submittedById], references: [id])
  approvedBy  User? @relation("ApprovedBy", fields: [approvedById], references: [id])
  
  @@unique([date, shift, line, hour])



  has4MChange    Boolean  @default(false)
  
  // Man category
  manChange      Boolean? @default(false)
  manReason      String?
  manCC          String? // Critical Characteristics
  manSC          String? // Significant Characteristics  
  manGeneral     String?
  
  // Machine category
  machineChange  Boolean? @default(false)
  machineReason  String?
  machineCC      String?
  machineSC      String?
  machineGeneral String?
  
  // Material category
  materialChange Boolean? @default(false)
  materialReason String?
  materialCC     String?
  materialSC     String?
  materialGeneral String?
  
  // Method/Tool/Fixture/Die category
  methodChange   Boolean? @default(false)
  methodReason   String?
  methodCC       String?
  methodSC       String?
  methodGeneral  String?
}

model Parameter {
  id     String        @id @default(auto()) @map("_id") @db.ObjectId
  type   ParameterType @unique
  values String[]
}

enum Role {
  TEAM_LEADER
  SUPERVISOR
  ADMIN
}

enum Status {
  PENDING
  APPROVED
  REJECTED
}

enum ProductionType {
  LH
  RH
  BOTH
}


enum DefectType {
  REPEAT
  NEW
}

enum ParameterType {
  LINE
  SHIFT
  MODEL
  TEAM_LEADER
  SHIFT_INCHARGE
  AVAILABLE_TIME
  LINE_CAPACITY
  PROBLEM_HEAD
  DESCRIPTION
  RESPONSIBILITY
}